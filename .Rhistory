scale_fill_viridis(discrete = T, begin = 0.01, option = "C") +
ggtitle("Variáveis contínuas") +
theme_ipsum() +
xlab("")
# creating a plot
ggplot(aux2) +
geom_boxplot(aes(x = Variável, y = Valor, fill = Variável)) +
facet_wrap(~Variável, scale = "free") +
scale_fill_viridis(discrete = T, begin = 0.01, option = "D") +
ggtitle("Variáveis contínuas") +
theme_ipsum() +
xlab("")
# creating a plot
ggplot(aux2) +
geom_boxplot(aes(x = Variável, y = Valor, fill = Variável)) +
facet_wrap(~Variável, scale = "free") +
scale_fill_viridis(discrete = T, begin = 0.01, option = "E") +
ggtitle("Variáveis contínuas") +
theme_ipsum() +
xlab("")
# creating a plot
ggplot(aux2) +
geom_boxplot(aes(x = Variável, y = Valor, fill = Variável)) +
facet_wrap(~Variável, scale = "free") +
scale_fill_viridis(discrete = T, begin = 0.01, option = "F") +
ggtitle("Variáveis contínuas") +
theme_ipsum() +
xlab("")
# creating a plot
ggplot(aux2) +
geom_boxplot(aes(x = Variável, y = Valor, fill = Variável)) +
facet_wrap(~Variável, scale = "free") +
scale_fill_viridis(discrete = T, begin = 0.01, option = "G") +
ggtitle("Variáveis contínuas") +
theme_ipsum() +
xlab("")
# creating a plot
ggplot(aux2) +
geom_boxplot(aes(x = Variável, y = Valor, fill = Variável)) +
facet_wrap(~Variável, scale = "free") +
scale_fill_viridis(discrete = T, begin = 0.01, option = "H") +
ggtitle("Variáveis contínuas") +
theme_ipsum() +
xlab("")
# creating a plot
ggplot(aux2) +
geom_boxplot(aes(x = Variável, y = Valor, fill = Variável)) +
facet_wrap(~Variável, scale = "free") +
scale_fill_viridis(discrete = T, begin = 0.01, option = "I") +
ggtitle("Variáveis contínuas") +
theme_ipsum() +
xlab("")
# creating a plot
ggplot(aux2) +
geom_boxplot(aes(x = Variável, y = Valor, colour = Variável)) +
facet_wrap(~Variável, scale = "free") +
ggtitle("Variáveis contínuas") +
theme_ipsum() +
xlab("")
# creating a plot
ggplot(aux2) +
geom_boxplot(aes(x = Variável, y = Valor, colour = Variável)) +
facet_wrap(~Variável, scale = "free") +
ggtitle("Variáveis contínuas") +
theme_ipsum()
styler:::style_active_file()
# IMPORTANDO OS DADOS
dados_tabagismo <- read_sas("~/Pessoal/Bioestatística/exercicio_shhs_180321.sas7bdat", NULL)
library(haven)
library(knitr)
# IMPORTANDO OS DADOS
dados_tabagismo <- read_sas("~/Pessoal/Bioestatística/exercicio_shhs_180321.sas7bdat", NULL)
kable(head(dados_tabagismo))
##### SEPARANDO AS VARIÁVEIS NUMÉRICAS
var_num <- dados_tabagismo %>% select(-c("smoking", "activity", "chd"))
library(tidyverse)
##### SEPARANDO AS VARIÁVEIS NUMÉRICAS
var_num <- dados_tabagismo %>% select('age', 'totchol', 'bmi', 'systol', 'diast'))
##### SEPARANDO AS VARIÁVEIS NUMÉRICAS
var_num <- dados_tabagismo %>% select('age', 'totchol', 'bmi', 'systol', 'diast')
View(dados_tabagismo)
library(tidyverse)
##### SEPARANDO AS VARIÁVEIS NUMÉRICAS
var_num <- dados_tabagismo %>% select('age', 'totchol', 'bmi', 'systol', 'diast')
dados_tabagismo %>% select('age', 'totchol', 'bmi', 'systol', 'diast')
# IMPORTANDO OS DADOS
dados_tabagismo <- read_sas("~/Pessoal/Bioestatística/exercicio_shhs_180321.sas7bdat", NULL)
##### SEPARANDO AS VARIÁVEIS NUMÉRICAS
var_num <- dados_tabagismo %>% select('age', 'totchol', 'bmi', 'systol', 'diast')
##### SEPARANDO AS VARIÁVEIS NUMÉRICAS
var_num <- dados_tabagismo %>% select('age', 'totchol', 'bmi', 'systol')
#### DESCRITIVA
aux <- stat.desc(var_num)
library(pastecs)
#### DESCRITIVA
aux <- stat.desc(var_num)
aux <- aux[c(4, 5, 8, 9, 12:14), ]
rownames(aux) <- c("Mínimo", "Máximo", "Mediana", "Média", "Variância", "Desvio Padrão", "Coeficiente de Variação")
kable(aux, digits = 3, align = "c", caption = "Principais Estatísticas descritivas do banco de dados")
aux2 <- gather(var_num)
colnames(aux2) <- c("Variável", "Valor")
summary(aux)
kable(summary(aux))
kable(summary(aux))
kable(aux, digits = 3, align = "c", caption = "Principais Estatísticas descritivas do banco de dados")
dados_tabagismo %>% select('age', 'totchol', 'bmi', 'systol', 'diast')
# creating a plot
aux2 <- gather(var_num)
colnames(aux2) <- c("Variável", "Valor")
ggplot(aux2) +
geom_boxplot(aes(x = Variável, y = Valor, colour = Variável)) +
facet_wrap(~Variável, scale = "free") +
ggtitle("Variáveis contínuas") +
theme_ipsum()
library(viridis)
library(hrbrthemes)
ggplot(aux2) +
geom_boxplot(aes(x = Variável, y = Valor, colour = Variável)) +
facet_wrap(~Variável, scale = "free") +
ggtitle("Variáveis contínuas") +
theme_ipsum()
# Selecionando apenas as variáveis categóricas e transformando elas em fator
var_cat <- c("smoking", "activity", "chd")
aux1 <- dados_tabagismo %>% select(c(var_cat))
aux1 <- lapply(aux1, function(x) as.factor(x))
dados_tabagismo[, var_cat] <- aux1
dados_tabagismo %>%
select("smoking", "activity", "chd") %>%
gather(key = "variavel", value = "valor", smoking, activity, chd) %>%
ggplot() +
geom_bar(mapping = aes(x = valor, fill = variavel)) +
scale_fill_viridis(discrete = T) +
ggtitle("Studying 4 species..") +
theme_ipsum() +
xlab("")
dados_tabagismo %>%
select("smoking", "activity", "chd") %>%
gather(key = "Variável", value = "Valor", smoking, activity, chd) %>%
ggplot() +
geom_bar(mapping = aes(x = valor, fill = variavel)) +
facet_wrap(~Variável, scale = "free")
dados_tabagismo %>%
select("smoking", "activity", "chd") %>%
gather(key = "Variável", value = "Valor", smoking, activity, chd) %>%
ggplot() +
geom_bar(mapping = aes(x = Valor, fill = Variável)) +
facet_wrap(~Variável, scale = "free")
dados_tabagismo %>%
select("smoking", "activity", "chd") %>%
gather(key = "Variável", value = "Valor", smoking, activity, chd) %>%
ggplot() +
geom_bar(mapping = aes(x = Valor, fill = Variável)) +
facet_wrap(~Variável, scale = "free") +
scale_fill_viridis(discrete = T) +
ggtitle("Variáveis categóricas") +
theme_ipsum() +
xlab("")
dados <- read_xlsx('banco_besouros_mortos.xlsx')
library(haven)
library(tidyverse)
library(pastecs)
library(knitr)
library(viridis)
library(hrbrthemes)
# IMPORTANDO OS DADOS
dados_tabagismo <- read_sas("~/Pessoal/Bioestatística/exercicio_shhs_180321.sas7bdat", NULL)
# Deixando as variáveis selecionadas como categóricas
var_cat <- c("smoking", "activity", "chd")
aux1 <- dados_tabagismo %>% select(c(var_cat))
aux1 <- lapply(aux1, function(x) as.factor(x))
dados_tabagismo[, var_cat] <- aux1
str(dados_tabagismo)
glm(chd~totchol, family = binomial(logit), data = dados_tabagismo)
aux3 <- glm(chd~totchol, family = binomial(logit), data = dados_tabagismo)
summary(aux3)
modelo1 <- glm(chd~totchol, family = binomial(logit), data = dados_tabagismo)
summary(modelo1)
modelo2 <- glm(chd~totchol+age, family = binomial(logit), data = dados_tabagismo)
summary(modelo2)
modelo3 <- glm(chd~totchol+age+systol+smoking+activity, family = binomial(logit), data = dados_tabagismo)
summary(modelo3)
library(readxl)
sinistros <- read_excel("C:/Users/joao-/Downloads/sinistros.xlsx")
qqnorm(sinistros$claims)
qqline(sinistros$claims)
### Questão 5 ##############################
str(sinistros)
sinistros$sexo <- as.factor(sinistros$sexo)
sinistros$usop <- as.factor(sinistros$usop)
# MODELO 1
log_mod1 <- glm(claims ~ idade + sexo + usop + anosest, family = poisson(log), data = sinistros)
summary(log_mod1)
### Questão 5 ##############################
str(sinistros)
# MODELO 1
log_mod1 <- glm(claims ~ idade + sexo + usop + anosest, family = poisson(log), data = sinistros)
summary(log_mod1)
# MODELO 2
log_mod2 <- glm(claims ~ idade + usop, family = poisson(log), data = sinistros)
summary(log_mod2)
# MODELO 3
log_mod3 <- glm(claims ~ idade + usop + idade * usop, family = poisson(log), data = sinistros)
summary(log_mod3)
teste_rv <-anova(log_mod2,log_mod3, test = "Chisq") # teste da razão de verossimilhança entre dois modelos encaixados utilizando a distribuição Qui - Quadrado
teste_rv$Deviance[2] #estatística de teste do Teste da Razão de Verossimilhança
teste_rv
teste_rv$Deviance[2]
pchisq(teste_rv$Deviance[2], df=1, lower.tail = F)
modelo1 <- glm(chd~totchol, family = binomial(logit), data = dados_tabagismo)
summary(modelo1)
anova(modelo1, modelo2, test = "Chisq") # teste da razão de verossimilhança entre dois modelos encaixados utilizando a distribuição Qui - Quadrado
### Questão 8 ##############################
library(hnp)
hnp(log_mod1) # modelo bem ajustado sem superdispersão
hnp(log_mod2) # modelo bem ajustado sem superdispersão
hnp(log_mod3) # modelo bem ajustado sem superdispersão
hnp(modelo1)
exp(coef(modelo1))
exp(confint(log_mod))
exp(confint(modelo1))
(confint(modelo1))
exp(coef(modelo2))
exp(confint(modelo2))
family(modelo1)$linkinv
exp(coef(modelo2))
library(tidyverse)
dados_tabagismo %>% select(-c("id"))
dados_tabagismo %>% select(-c("id")) %>% cor()
cor(dados_tabagismo[, 2:7])
cor(dados_tabagismo[, 2:3])
cor(dados_tabagismo[, 2:4])
cor(dados_tabagismo[, 2:5])
cor(dados_tabagismo[, 2:6])
##### IMPORTANDO DADOS
dados_tabagismo <- read_sas("~/Pessoal/Bioestatística/exercicio_shhs_180321.sas7bdat", NULL)
library(haven)
##### IMPORTANDO DADOS
dados_tabagismo <- read_sas("~/Pessoal/Bioestatística/exercicio_shhs_180321.sas7bdat", NULL)
cor(dados_tabagismo[, 2:6])
cor(dados_tabagismo[, 2:8])
dados_tabagismo %>% select(-c("id")) %>% cor()
corrplot(M, title="Correlação entre as Variáveis: FRUIT, POLLEN e IRRIGATION", mar=c(0, 0, 2, 0), type="full", order="hclust", col=brewer.pal(n=8, name="RdYlBu"))
library(corrplot)
corrplot(M, title="Correlação entre as Variáveis: FRUIT, POLLEN e IRRIGATION", mar=c(0, 0, 2, 0), type="full", order="hclust", col=brewer.pal(n=8, name="RdYlBu"))
M <- dados_tabagismo %>% select(-c("id")) %>% cor()
corrplot(M, title="Correlação entre as Variáveis: FRUIT, POLLEN e IRRIGATION", mar=c(0, 0, 2, 0), type="full", order="hclust", col=brewer.pal(n=8, name="RdYlBu"))
library(RColorBrewer)
corrplot(M, title="Correlação entre as Variáveis: FRUIT, POLLEN e IRRIGATION", mar=c(0, 0, 2, 0), type="full", order="hclust", col=brewer.pal(n=8, name="RdYlBu"))
corrplot(M, title="Correlação entre as Variáveis: FRUIT, POLLEN e IRRIGATION", mar=c(0, 0, 2, 0), type="full", order="hclust")
corrplot(M, title="Correlação entre as Variáveis: FRUIT, POLLEN e IRRIGATION", mar=c(0, 0, 2, 0), type = "lower", order="hclust", col=brewer.pal(n=8, name="RdYlBu"))
corrplot(M, title="Correlação entre as Variáveis: FRUIT, POLLEN e IRRIGATION", mar=c(0, 0, 2, 0), type = "full", order="hclust", col=brewer.pal(n=8, name="RdYlBu"))
corrplot(M, title="Correlação entre as Variáveis: FRUIT, POLLEN e IRRIGATION", mar=c(0, 0, 2, 0), type = "full", order="hclust", col=brewer.pal(n=2, name="RdYlBu"))
corrplot(M, title="Correlação entre as Variáveis: FRUIT, POLLEN e IRRIGATION", mar=c(0, 0, 2, 0), type = "full", order="hclust", col=brewer.pal(n=3, name="RdYlBu"))
corrplot(M, title="Correlação entre as Variáveis: FRUIT, POLLEN e IRRIGATION", mar=c(0, 0, 2, 0), type = "full", order="hclust", col=brewer.pal(n=3, name="BuPu"))
corrplot(M, title="Correlação entre as Variáveis: FRUIT, POLLEN e IRRIGATION", mar=c(0, 0, 2, 0), type = "full", order="hclust", col=brewer.pal(n=4, name="BuPu"))
corrplot(M, title="Correlação entre as Variáveis: FRUIT, POLLEN e IRRIGATION", mar=c(0, 0, 2, 0), type = "full", order="hclust", col=brewer.pal(n=5, name="BuPu"))
corrplot(M, title="Correlação entre as Variáveis: FRUIT, POLLEN e IRRIGATION", mar=c(0, 0, 2, 0), type = "full", order="hclust", col=brewer.pal(n=8, name="BuPu"))
unique(dados_tabagismo$chd)
dados_tabagismo %>%
select("smoking", "activity", "chd") %>%
gather(key = "Variável", value = "Valor", smoking, activity, chd) %>%
ggplot() +
geom_bar(mapping = aes(x = Valor, fill = Variável)) +
xlim(c(1,2,3)) +
facet_wrap(~Variável, scale = "free") +
scale_fill_viridis(discrete = T) +
ggtitle("Variáveis categóricas") +
theme_ipsum() +
xlab("")
dados_tabagismo %>%
select("smoking", "activity", "chd") %>%
gather(key = "Variável", value = "Valor", smoking, activity, chd) %>%
ggplot() +
geom_bar(mapping = aes(x = Valor, fill = Variável)) +
xlim(1,2,3) +
facet_wrap(~Variável, scale = "free") +
scale_fill_viridis(discrete = T) +
ggtitle("Variáveis categóricas") +
theme_ipsum() +
xlab("")
dados_tabagismo %>%
select(factor("smoking"), factor("activity"), factor("chd")) %>%
gather(key = "Variável", value = "Valor", smoking, activity, chd) %>%
ggplot() +
geom_bar(mapping = aes(x = Valor, fill = Variável)) +
facet_wrap(~Variável, scale = "free") +
scale_fill_viridis(discrete = T) +
ggtitle("Variáveis categóricas") +
theme_ipsum() +
xlab("")
library(haven)
library(tidyverse)
library(pastecs)
library(knitr)
library(viridis)
library(hrbrthemes)
library(corrplot)
library(RColorBrewer)
dados_tabagismo %>%
select(factor("smoking"), factor("activity"), factor("chd")) %>%
gather(key = "Variável", value = "Valor", smoking, activity, chd) %>%
ggplot() +
geom_bar(mapping = aes(x = Valor, fill = Variável)) +
facet_wrap(~Variável, scale = "free") +
scale_fill_viridis(discrete = T) +
ggtitle("Variáveis categóricas") +
theme_ipsum() +
xlab("")
dados_tabagismo %>%
select(factor("smoking"), as.factor("activity"), factor("chd")) %>%
gather(key = "Variável", value = "Valor", smoking, activity, chd) %>%
ggplot() +
geom_bar(mapping = aes(x = Valor, fill = Variável)) +
facet_wrap(~Variável, scale = "free") +
scale_fill_viridis(discrete = T) +
ggtitle("Variáveis categóricas") +
theme_ipsum() +
xlab("")
dados_tabagismo %>%
select(factor("smoking"), as.factor("activity"), as.factor("chd")) %>%
gather(key = "Variável", value = "Valor", smoking, activity, chd) %>%
ggplot() +
geom_bar(mapping = aes(x = Valor, fill = Variável)) +
facet_wrap(~Variável, scale = "free") +
scale_fill_viridis(discrete = T) +
ggtitle("Variáveis categóricas") +
theme_ipsum() +
xlab("")
dados_tabagismo %>%
select(factor("smoking"), as.factor("activity"), as.factor("chd")) %>%
gather(key = "Variável", value = "Valor", smoking, activity, chd) %>%
ggplot() +
geom_bar(mapping = aes(x = Valor, fill = Variável)) +
facet_wrap(~Variável, scale = c(0,1,2,3)) +
scale_fill_viridis(discrete = T) +
ggtitle("Variáveis categóricas") +
theme_ipsum() +
xlab("")
dados_tabagismo %>%
select(factor("smoking"), as.factor("activity"), as.factor("chd")) %>%
gather(key = "Variável", value = "Valor", smoking, activity, chd) %>%
ggplot() +
geom_bar(mapping = aes(x = Valor, fill = Variável)) +
facet_wrap(~Variável, scale = "free_x") +
scale_fill_viridis(discrete = T) +
ggtitle("Variáveis categóricas") +
theme_ipsum() +
xlab("")
dados_tabagismo %>%
select(factor("smoking"), as.factor("activity"), as.factor("chd")) %>%
gather(key = "Variável", value = "Valor", smoking, activity, chd) %>%
ggplot() +
geom_bar(mapping = aes(x = Valor, fill = Variável)) +
facet_wrap(~Variável, scale = "free_y") +
scale_fill_viridis(discrete = T) +
ggtitle("Variáveis categóricas") +
theme_ipsum() +
xlab("")
dados_tabagismo %>%
select(factor("smoking"), as.factor("activity"), as.factor("chd")) %>%
gather(key = "Variável", value = "Valor", smoking, activity, chd) %>%
ggplot() +
geom_bar(mapping = aes(x = Valor, fill = Variável)) +
facet_wrap(~Variável, scale = "free_x") +
scale_fill_viridis(discrete = T) +
ggtitle("Variáveis categóricas") +
theme_ipsum() +
xlab("")
dados_tabagismo %>%
select("smoking", "activity", "chd") %>%
gather(key = "Variável", value = "Valor", smoking, activity, chd) %>%
ggplot() +
geom_bar(mapping = aes(x = Valor, fill = Variável)) +
facet_wrap(~Variável, scale = "free_x") +
scale_fill_viridis(discrete = T) +
ggtitle("Variáveis categóricas") +
theme_ipsum() +
xlab("")
##### TRANSFORMANDO AS VARIAVEIS EM CATEGORICAS
var_cat <- c("smoking", "activity", "chd")
aux1 <- dados_tabagismo %>% select(c(var_cat))
aux1 <- lapply(aux1, function(x) as.factor(x))
dados_tabagismo[, var_cat] <- aux1
dados_tabagismo %>%
select("smoking", "activity", "chd") %>%
gather(key = "Variável", value = "Valor", smoking, activity, chd) %>%
ggplot() +
geom_bar(mapping = aes(x = Valor, fill = Variável)) +
facet_wrap(~Variável, scale = "free_x") +
scale_fill_viridis(discrete = T) +
ggtitle("Variáveis categóricas") +
theme_ipsum() +
xlab("")
aux1 %>%
gather(key = "Variável", value = "Valor", smoking, activity, chd) %>%
ggplot() +
geom_bar(mapping = aes(x = Valor, fill = Variável)) +
facet_wrap(~Variável, scale = "free_x") +
scale_fill_viridis(discrete = T) +
ggtitle("Variáveis categóricas") +
theme_ipsum() +
xlab("")
aux1
aux1 <- as.data.frame(aux1)
aux1
aux1 %>%
gather(key = "Variável", value = "Valor", smoking, activity, chd) %>%
ggplot() +
geom_bar(mapping = aes(x = Valor, fill = Variável)) +
facet_wrap(~Variável, scale = "free_x") +
scale_fill_viridis(discrete = T) +
ggtitle("Variáveis categóricas") +
theme_ipsum() +
xlab("")
dados_tabagismo[, var_cat] <- aux1 # deixando as variáveis categóricas como fator
modelo1 <- glm(chd~totchol, family = binomial(logit), data = dados_tabagismo)
summary(modelo1)
modelo2 <- glm(chd~totchol+age, family = binomial(logit), data = dados_tabagismo)
summary(modelo2)
anova(modelo1, modelo2, test = "Chisq") # teste da razão de verossimilhança entre dois modelos encaixados utilizando a distribuição Qui - Quadrado
corrplot(M, title="Correlação entre as Variáveis", mar=c(0, 0, 2, 0), type = "full", order="hclust", col=brewer.pal(n=8, name="GnBu"))
modelo3 <- glm(chd~totchol+age+systol+smoking+activity, family = binomial(logit), data = dados_tabagismo)
summary(modelo3)
anova(modelo2, modelo3, test = "Chisq") # teste da razão de verossimilhança entre dois modelos encaixados utilizando a distribuição Qui - Quadrado
styler:::style_active_file()
styler:::style_active_file()
modelo3_int <- glm(chd ~ totchol + age + systol + smoking + activity + totchol*systol, family = binomial(logit), data = dados_tabagismo)
summary(modelo3_int)
modelo3_int <- glm(chd ~  age + smoking + activity + totchol*systol, family = binomial(logit), data = dados_tabagismo)
summary(modelo3_int)
anova(modelo3, modelo3_int, test = "Chisq") # teste da razão de verossimilhança entre dois modelos encaixados utilizando a distribuição Qui - Quadrado
### categorização da variável colesterol
quantile(dados_tabagismo$totchol)
### categorização da variável colesterol
quantile(dados_tabagismo$totchol, type = "2")
### categorização da variável colesterol
quantile(dados_tabagismo$totchol, type = 2)
### categorização da variável colesterol
quantile(dados_tabagismo$totchol, type = 4)
### categorização da variável colesterol
quantile(dados_tabagismo$totchol, )[1]
### categorização da variável colesterol
quantile(dados_tabagismo$totchol, )[2]
### categorização da variável colesterol
quantile(dados_tabagismo$totchol, )[3]
### categorização da variável colesterol
quantile(dados_tabagismo$totchol, )[4]
### categorização da variável colesterol
quantile(dados_tabagismo$totchol, )[5]
quantis <- quantile(dados_tabagismo$totchol)
dados_tabagismo$totchol <= quantis[2]
totchol_cat <- NULL
if (dados_tabagismo$totchol <= quantis[2]) {
totchol_cat <- 1
} else {
totchol_cat <- 2
}
for (i in length(dados_tabagismo$totchol)) {
if (i <= quantis[2]) {
totchol_cat <- 1
} else {
totchol_cat <- 2
}
}
totchol_cat <- NULL
quantis <- quantile(dados_tabagismo$totchol)
for (i in length(dados_tabagismo$totchol)) {
if (i <= quantis[2]) {
totchol_cat[i] <- 1
} else {
totchol_cat[i] <- 2
}
}
totchol_cat
i <= quantis[2]
totchol_cat <- NULL
quantis <- quantile(dados_tabagismo$totchol)
for (i in length(dados_tabagismo$totchol)) {
if (dados_tabagismo$totchol[i] <= quantis[2]) {
totchol_cat[i] <- 1
} else {
totchol_cat[i] <- 2
}
}
dados_tabagismo$totchol[i] <= quantis[2]
n <- length(dados_tabagismo$totchol
for (i in n)) {
if (dados_tabagismo$totchol[i] <= quantis[2]) {
totchol_cat[i] <- 1
} else {
totchol_cat[i] <- 2
}
}
ifelse(dados_tabagismo$totchol <= quantis[2], 1, 2)
if (dados_tabagismo$totchol <= quantis[2]) {
totchol_cat <- 1
} else {
totchol_cat <- 2
}
ifelse(dados_tabagismo$totchol <= quantis[2], 1,
ifelse(dados_tabagismo$totchol <= quantis[3], 2,
ifelse(dados_tabagismo$totchol <= quantis[4], 3, 4)
)
)
dados_tabagismo$totchol_cat <- ifelse(dados_tabagismo$totchol <= quantis[2], 1,
ifelse(dados_tabagismo$totchol <= quantis[3], 2,
ifelse(dados_tabagismo$totchol <= quantis[4], 3, 4)
)
)
styler:::style_active_file()
styler:::style_active_file()
styler:::style_active_file()
